name: main_workflow
on:
  push:
    branches:
      - Bingo_Workflow
jobs:
  syntax_check_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Linter execution
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: Bingo_Workflow
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: /
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js
          VALIDATE_JAVASCRIPT_ES: true
  test_execution_job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Check Tests
      run: npm install; npm test
  build_statics_job:
    runs-on: ubuntu-latest
    needs: [syntax_check_job,test_execution_job]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build statics
      run: npm install && npm run buildDev
    - name: artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: ./dist
  deploy_job:
    runs-on: ubuntu-latest
    needs: [syntax_check_job,test_execution_job,build_statics_job]
    steps:
      - name: artifact_download
        uses: actions/download-artifact@v2
        with: 
          name: artifact
      - name: deploy_artifact 
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: xemaMaestreBingo.surge.sh
          project: .
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}
  notification_job:
    runs-on: ubuntu-latest
    needs : [syntax_check_job,test_execution_job,build_statics_job,deploy_job]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Send email
        uses: ./.github/actions/email
        with:
          email_sender: ${{ secrets.EMAIL_SENDER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          email_to_send: ${{ secrets.EMAIL_TO_SEND }}

          syntax_check_job: ${{ needs.syntax_check_job.outputs.job-status }}
          test_execution_job: ${{ needs.test_execution_job.outputs.job-status }}
          build_statics_job: ${{needs.build_statics_job.outputs.job-status}}
          deploy_job: ${{ needs.deploy_job.outputs.job-status }}
      